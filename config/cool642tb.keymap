#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        num00: num00 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_0 &kp NUMBER_0>;
            label = "NUM00";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R             &kp T                                     &kp Y          &kp U  &kp I      &kp O       &kp P
&kp A             &kp S         &kp D         &kp F             &kp G        &to 1      &kp SEMICOLON     &kp H          &kp J  &kp K      &kp L       &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V             &kp B        &lt 6 SQT  &kp MINUS         &kp N          &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 LANGUAGE_2  &lt 5 SPACE  &lt 3 TAB  &lt 2 LANGUAGE_1  &kp BACKSPACE                                &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp DELETE BACKSPACE>;
        };

        MARK {
            bindings = <
&kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                        &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp INT_YEN
&kp DOLLAR       &kp PERCENT   &kp CARET             &trans                 &trans  &trans     &kp PIPE   &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp EQUAL              &trans  &kp GRAVE  &kp TILDE  &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp NON_US_BACKSLASH
&trans           &trans        &trans                &trans                 &trans  &trans     &trans     &trans                                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUMARROW {
            bindings = <
&kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK  &kp SLASH                  &kp LG(LEFT_ARROW)  &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &kp LG(RIGHT_ARROW)
&kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS     &trans     &trans  &trans  &kp HOME            &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT                &kp END
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS      &trans     &trans  &trans  &trans              &kp LG(LC(LEFT_ARROW))  &trans          &kp LG(LC(RIGHT_ARROW))  &trans
&kp NUMBER_0  &num00        &kp DOT       &kp ENTER     &trans     &trans  &trans  &trans                                                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp DELETE BACKSPACE>;
        };

        FARROW {
            bindings = <
&kp F7  &kp F8  &kp F9  &kp F12  &trans                  &kp LG(LEFT_ARROW)  &kp LS(LC(TAB))         &kp UP_ARROW    &kp LC(TAB)              &kp LG(RIGHT_ARROW)
&kp F4  &kp F5  &kp F6  &kp F11  &trans  &trans  &trans  &kp HOME            &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END
&kp F1  &kp F2  &kp F3  &kp F10  &trans  &trans  &trans  &trans              &kp LC(LG(LEFT_ARROW))  &trans          &kp LC(LG(RIGHT_ARROW))  &trans
&trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans                                                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&trans  &trans     &trans         &trans     &trans                  &trans  &kp LA(LC(TAB))  &trans     &kp LC(TAB)  &trans
&trans  &kp LC(V)  &kp LC(LS(V))  &kp LC(C)  &trans  &trans  &trans  &trans  &mkp LCLK        &mkp RCLK  &mkp MCLK    &trans
&trans  &trans     &trans         &trans     &trans  &trans  &trans  &trans  &mkp MB4         &mkp MB5   &trans       &trans
&trans  &trans     &trans         &trans     &mo 5   &trans  &trans  &trans                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&kp Q   &kp W   &kp E   &kp R   &kp T                   &kp Y   &kp U  &kp I      &kp O       &kp P
&kp A   &kp S   &kp D   &kp F   &kp G   &trans  &trans  &kp H   &kp J  &kp K      &kp L       &trans
&kp Z   &kp X   &kp C   &kp V   &trans  &trans  &trans  &kp N   &kp M  &kp COMMA  &kp PERIOD  &trans
&trans  &trans  &trans  &trans  &mo 5   &trans  &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_6 {
            bindings = <
&trans        &trans        &trans        &trans  &trans                  &kp Y   &kp U  &kp I      &kp O       &kp P
&trans        &trans        &trans        &trans  &trans  &trans  &trans  &kp H   &kp J  &kp K      &kp L       &trans
&bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans  &trans  &trans  &kp N   &kp M  &kp COMMA  &kp PERIOD  &trans
&trans        &bt BT_SEL 0  &trans        &trans  &trans  &trans  &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
