#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        num00: num00 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_0 &kp KP_NUMBER_0>;
            label = "NUM00";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E      &kp R             &kp T                                         &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A             &kp S         &kp D      &kp F             &kp G        &to 1             &kp SQT        &kp H        &kp J  &kp K      &kp L       &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C      &kp V             &kp B        &lt 6 TAB         &kp COLON      &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH
&kp LEFT_ALT      &kp LEFT_WIN  &kp LCTRL  &lt 2 LANGUAGE_2  &lt 5 SPACE  &lt 3 LANGUAGE_1  &kp BACKSPACE  &lt 1 ENTER                                &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp DELETE BACKSPACE>;
        };

        MARK {
            bindings = <
&kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                                 &trans     &trans          &kp UP_ARROW      &trans             &kp INT_YEN
&kp DOLLAR       &kp PERCENT   &kp CARET             &trans                 &trans  &trans          &kp GRAVE      &trans     &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW    &kp TILDE
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp EQUAL              &trans  &trans          &kp SEMICOLON  &kp PIPE   &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH
&trans           &trans        &trans                &kp LANGUAGE_2         &trans  &kp LANGUAGE_1  &kp BACKSPACE  &kp ENTER                                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUMARROW {
            bindings = <
&kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_ASTERISK  &kp KP_SLASH                            &kp LG(LEFT_ARROW)  &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &kp LG(RIGHT_ARROW)
&kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS     &trans        &trans     &trans         &kp HOME            &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT                &kp END
&kp KP_NUMBER_1  &kp KP_N2        &kp KP_NUMBER_3  &kp KP_PLUS      &trans        &kp TAB    &trans         &trans              &kp LG(LC(LEFT_ARROW))  &trans          &kp LG(LC(RIGHT_ARROW))  &kp RIGHT_SHIFT
&kp KP_NUMBER_0  &num00           &kp KP_DOT       &trans           &trans        &kp ENTER  &kp BACKSPACE  &kp ENTER                                                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp DELETE BACKSPACE>;
        };

        FARROW {
            bindings = <
&kp F7  &kp F8  &kp F9  &kp F12  &trans                  &kp LG(LEFT_ARROW)  &kp LS(LC(TAB))         &kp UP_ARROW    &kp LC(TAB)              &kp LG(RIGHT_ARROW)
&kp F4  &kp F5  &kp F6  &kp F11  &trans  &trans  &trans  &kp HOME            &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END
&kp F1  &kp F2  &kp F3  &kp F10  &trans  &trans  &trans  &trans              &kp LC(LG(LEFT_ARROW))  &trans          &kp LC(LG(RIGHT_ARROW))  &kp RIGHT_SHIFT
&trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans                                                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp LCLK  &mkp RCLK  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &mo 5   &trans  &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SCROLL {
            bindings = <
&kp Q   &kp W   &kp E   &kp R   &kp T                   &kp Y   &kp U  &kp I      &kp O       &kp P
&kp A   &kp S   &kp D   &kp F   &kp G   &trans  &trans  &kp H   &kp J  &kp K      &kp L       &trans
&kp Z   &kp X   &kp C   &kp V   &trans  &trans  &trans  &kp N   &kp M  &kp COMMA  &kp PERIOD  &trans
&trans  &trans  &trans  &trans  &mo 5   &trans  &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_6 {
            bindings = <
&trans        &trans        &trans        &trans  &trans                  &kp Y   &kp U  &kp I      &kp O       &kp P
&trans        &trans        &trans        &trans  &trans  &trans  &trans  &kp H   &kp J  &kp K      &kp L       &trans
&bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans  &trans  &trans  &kp N   &kp M  &kp COMMA  &kp PERIOD  &trans
&trans        &bt BT_SEL 0  &trans        &trans  &trans  &trans  &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
